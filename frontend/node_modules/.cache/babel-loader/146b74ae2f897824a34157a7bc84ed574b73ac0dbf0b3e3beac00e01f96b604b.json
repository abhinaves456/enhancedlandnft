{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Abhinav\\\\Downloads\\\\EnhancedLandNFT\\\\EnhancedLandNFT\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport MapComponent from './MapComponent';\nimport ValidatorDashboard from './ValidatorDashboard';\nimport Marketplace from './Marketplace';\nimport PropertyRegistry from './contracts/PropertyRegistry.json';\nimport marketplaceContract from './contracts/marketplaceContract.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [provider, setProvider] = useState(null);\n  const [signer, setSigner] = useState(null);\n  const [account, setAccount] = useState(null);\n  const [registryContract, setRegistryContract] = useState(null);\n  const [marketplaceContract, setMarketplaceContract] = useState(null);\n  const [propertyName, setPropertyName] = useState('');\n  const [ipfsHash, setIpfsHash] = useState('');\n  const [propertyCoords, setPropertyCoords] = useState([]);\n  const REGISTRY_ADDRESS = 'YOUR_PROPERTY_REGISTRY_ADDRESS';\n  const MARKETPLACE_ADDRESS = 'YOUR_MARKETPLACE_ADDRESS';\n\n  // Connect MetaMask\n  const connectWallet = async () => {\n    if (window.ethereum) {\n      const tempProvider = new ethers.BrowserProvider(window.ethereum);\n      await tempProvider.send(\"eth_requestAccounts\", []);\n      const tempSigner = await tempProvider.getSigner();\n      const addr = await tempSigner.getAddress();\n      setProvider(tempProvider);\n      setSigner(tempSigner);\n      setAccount(addr);\n      const registry = new ethers.Contract(REGISTRY_ADDRESS, PropertyRegistryABI.abi, tempSigner);\n      setRegistryContract(registry);\n      const market = new ethers.Contract(MARKETPLACE_ADDRESS, MarketplaceABI.abi, tempSigner);\n      setMarketplaceContract(market);\n    } else {\n      alert(\"Install MetaMask!\");\n    }\n  };\n\n  // Submit property\n  const submitProperty = async () => {\n    if (!propertyName || !ipfsHash || propertyCoords.length === 0) {\n      alert(\"Fill all fields!\");\n      return;\n    }\n    const tx = await registryContract.submitProperty(propertyName, ipfsHash, JSON.stringify(propertyCoords));\n    await tx.wait();\n    alert(\"Property submitted!\");\n    setPropertyName('');\n    setIpfsHash('');\n    setPropertyCoords([]);\n  };\n  useEffect(() => {\n    if (window.ethereum) {\n      window.ethereum.on('accountsChanged', () => {\n        connectWallet();\n      });\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Enhanced Land NFT Marketplace\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), !account ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connectWallet,\n      children: \"Connect Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Connected: \", account]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Submit Property\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Property Name\",\n        value: propertyName,\n        onChange: e => setPropertyName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"IPFS Hash\",\n        value: ipfsHash,\n        onChange: e => setIpfsHash(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MapComponent, {\n        addPropertyCoords: setPropertyCoords\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: submitProperty,\n        children: \"Submit Property\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ValidatorDashboard, {\n        registryContract: registryContract\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Marketplace, {\n        marketplaceContract: marketplaceContract,\n        signer: signer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"K9Ad+mfvpJMSGirEbSpPyEr8jxI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ethers","MapComponent","ValidatorDashboard","Marketplace","PropertyRegistry","marketplaceContract","jsxDEV","_jsxDEV","App","_s","provider","setProvider","signer","setSigner","account","setAccount","registryContract","setRegistryContract","setMarketplaceContract","propertyName","setPropertyName","ipfsHash","setIpfsHash","propertyCoords","setPropertyCoords","REGISTRY_ADDRESS","MARKETPLACE_ADDRESS","connectWallet","window","ethereum","tempProvider","BrowserProvider","send","tempSigner","getSigner","addr","getAddress","registry","Contract","PropertyRegistryABI","abi","market","MarketplaceABI","alert","submitProperty","length","tx","JSON","stringify","wait","on","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","placeholder","value","onChange","e","target","addPropertyCoords","_c","$RefreshReg$"],"sources":["C:/Users/Abhinav/Downloads/EnhancedLandNFT/EnhancedLandNFT/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport MapComponent from './MapComponent';\nimport ValidatorDashboard from './ValidatorDashboard';\nimport Marketplace from './Marketplace';\nimport PropertyRegistry from './contracts/PropertyRegistry.json';\nimport marketplaceContract from './contracts/marketplaceContract.json';\nfunction App() {\n  const [provider, setProvider] = useState(null);\n  const [signer, setSigner] = useState(null);\n  const [account, setAccount] = useState(null);\n  const [registryContract, setRegistryContract] = useState(null);\n  const [marketplaceContract, setMarketplaceContract] = useState(null);\n  const [propertyName, setPropertyName] = useState('');\n  const [ipfsHash, setIpfsHash] = useState('');\n  const [propertyCoords, setPropertyCoords] = useState([]);\n\n  const REGISTRY_ADDRESS = 'YOUR_PROPERTY_REGISTRY_ADDRESS';\n  const MARKETPLACE_ADDRESS = 'YOUR_MARKETPLACE_ADDRESS';\n\n  // Connect MetaMask\n  const connectWallet = async () => {\n    if (window.ethereum) {\n      const tempProvider = new ethers.BrowserProvider(window.ethereum);\n      await tempProvider.send(\"eth_requestAccounts\", []);\n      const tempSigner = await tempProvider.getSigner();\n      const addr = await tempSigner.getAddress();\n      setProvider(tempProvider);\n      setSigner(tempSigner);\n      setAccount(addr);\n\n      const registry = new ethers.Contract(REGISTRY_ADDRESS, PropertyRegistryABI.abi, tempSigner);\n      setRegistryContract(registry);\n\n      const market = new ethers.Contract(MARKETPLACE_ADDRESS, MarketplaceABI.abi, tempSigner);\n      setMarketplaceContract(market);\n    } else {\n      alert(\"Install MetaMask!\");\n    }\n  };\n\n  // Submit property\n  const submitProperty = async () => {\n    if (!propertyName || !ipfsHash || propertyCoords.length === 0) {\n      alert(\"Fill all fields!\");\n      return;\n    }\n    const tx = await registryContract.submitProperty(propertyName, ipfsHash, JSON.stringify(propertyCoords));\n    await tx.wait();\n    alert(\"Property submitted!\");\n    setPropertyName('');\n    setIpfsHash('');\n    setPropertyCoords([]);\n  };\n\n  useEffect(() => {\n    if (window.ethereum) {\n      window.ethereum.on('accountsChanged', () => {\n        connectWallet();\n      });\n    }\n  }, []);\n\n  return (\n    <div style={{ padding: '20px' }}>\n      <h1>Enhanced Land NFT Marketplace</h1>\n      {!account ? (\n        <button onClick={connectWallet}>Connect Wallet</button>\n      ) : (\n        <div>\n          <p>Connected: {account}</p>\n\n          <h2>Submit Property</h2>\n          <input \n            type=\"text\" \n            placeholder=\"Property Name\" \n            value={propertyName} \n            onChange={(e) => setPropertyName(e.target.value)} \n          />\n          <input \n            type=\"text\" \n            placeholder=\"IPFS Hash\" \n            value={ipfsHash} \n            onChange={(e) => setIpfsHash(e.target.value)} \n          />\n          <MapComponent addPropertyCoords={setPropertyCoords} />\n          <button onClick={submitProperty}>Submit Property</button>\n\n          <hr />\n          <ValidatorDashboard registryContract={registryContract} />\n          <hr />\n          <Marketplace marketplaceContract={marketplaceContract} signer={signer} />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}